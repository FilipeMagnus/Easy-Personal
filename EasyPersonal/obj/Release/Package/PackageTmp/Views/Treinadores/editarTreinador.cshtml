@model EasyPersonal.Models.Treinadores

@{
    ViewBag.Title = "editarTreinador";
}

<h2>Alterar Perfil</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ActionLink("Alterar Senha", "alterarSenha")<br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
                @Html.Label(" Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Telefone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label(" Idade", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cidade", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
            </div>
        </div>

     
        @{
            if (Model.sexo == "m")
            {

                <div style="margin-left:10%;">
                    @Html.RadioButton("sexo", "m", true) Masculino
                    @Html.RadioButton("sexo", "f", false) Feminino
                </div>
                    <br />
            }
            else
            {

                <div style="margin-left:10%;">
                    @Html.RadioButton("sexo", "m", false) Masculino
                    @Html.RadioButton("sexo", "f", true) Feminino
                </div>
                    <br />
            }
        }

        @Html.Hidden("senha", Model.senha)
        @Html.Hidden("idTreinador", Model.idTreinador)
        @Html.Hidden("parcelaGerada", Model.parcelaGerada)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "mainTreinador")
</div>
