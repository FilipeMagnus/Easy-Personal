@model EasyPersonal.Models.Faulkner

@{
    ViewBag.Title = "editarFaulkner";
}
@{ if (Session["SexoAluno"].Equals("m"))
 {
    <h2>Editar protocolo Faulkner do @Session["NomeAluno"]</h2>
 }
 else
 {
    <h2>Editar protocolo Faulkner da @Session["NomeAluno"]</h2>
 }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.Hidden("idAluno", Model.idAluno)
      

        <div class="form-group">
            @Html.Label(" Data Avaliação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataAvaliacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataAvaliacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Altura", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.altura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.altura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Peso Atual", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pesoAtual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pesoAtual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Massa Gorda", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pesoGordo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pesoGordo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Massa Magra", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pesoMagro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pesoMagro, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Hidden("pesoOsseo", Model.pesoOsseo)

        <div class="form-group">
            @Html.Label(" Massa Muscular", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pesoMuscular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pesoMuscular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Peso Residual", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pesoResidual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pesoResidual, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("IMC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IMC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IMC, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Triceps", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.triceps, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.triceps, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Subescapular", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subescapular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subescapular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Supra Ilíaca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.supraIliaca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.supraIliaca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Abdômen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.abdominal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.abdominal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "listaFaulkner")
</div>
